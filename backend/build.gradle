plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot 기본 의존성
    implementation 'org.springframework.boot:spring-boot-starter-web' // 웹 애플리케이션 개발
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA를 통한 데이터 액세스
    implementation 'org.springframework.boot:spring-boot-starter-websocket' // 웹소켓 지원
    implementation 'org.springframework.boot:spring-boot-starter-security' // 보안 관련 기능
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // OAuth2 클라이언트
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'





    // 이메일 인증 관련
    implementation 'org.springframework.boot:spring-boot-starter-mail' // 이메일 전송 기능

    // MySQL 연동 관련 (수정 금지)
    runtimeOnly("com.mysql:mysql-connector-j")

    // Lombok
    compileOnly 'org.projectlombok:lombok' // Lombok 사용(코드 간소화)
    annotationProcessor 'org.projectlombok:lombok' // Lombok 어노테이션 처리기

    // 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // Spring Boot 테스트 지원
    testImplementation 'org.springframework.security:spring-security-test' // Spring Security 테스트 지원
    testImplementation 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // JUnit 플랫폼 실행기

    // JJWT 의존성 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 파싱을 위한 구현체

    // 서블릿 API 의존성 추가
    //implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0' // 서블릿 API (Spring Security와 필터에서 사용)
}

tasks.named('test') {
    useJUnitPlatform()
}
